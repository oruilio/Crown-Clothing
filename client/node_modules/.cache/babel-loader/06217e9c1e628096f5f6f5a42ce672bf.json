{"ast":null,"code":"import _objectSpread from \"/Users/rui/Desktop/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user; //we pull out googleProvider because we wanna access to userRef\n\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/rui/Desktop/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP;AAKA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAG;AAAA,iBACgB,MAAMH,IAAI,CAACI,eAAL,CAAqBH,cAArB,CADtB;AAAA,UACQI,IADR,QACQA,IADR,EACgE;;;AAC/D,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLI,aAAa;AACTW,MAAAA,EAAE,EAACF,YAAY,CAACE;AADP,OAENF,YAAY,CAACG,IAAb,EAFM,EADR,CAAT;AAMH,GAVD,CAWA,OAAMC,KAAN,EAAY;AACR,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACH;AACJ;AAGD,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA1B,EAAwD;AAC3D,MAAI;AAAA,kBACiB,MAAMjB,IAAI,CAACkB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADvB;AAAA,UACQZ,IADR,SACQA,IADR;;AAEA,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BG,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACLI,aAAa;AACTW,MAAAA,EAAE,EAACF,YAAY,CAACE;AADP,OAENF,YAAY,CAACG,IAAb,EAFM,EADR,CAAT;AAMH,GAVD,CAWA,OAAMC,KAAN,EAAY;AACRjB,IAAAA,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUQ,kBAAV,GAA+B;AAClC,QAAM1B,UAAU,CAACI,eAAe,CAACuB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACgB,mBAAD,CAAL,EAA4BhB,IAAI,CAACuB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\n\nimport {\n  signInSuccess,\n  signInFailure,\n} from './user.actions';\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);     //we pull out googleProvider because we wanna access to userRef\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({\n                id:userSnapshot.id, \n                ...userSnapshot.data()\n            })\n        )\n    }\n    catch(error){\n        yield put(signInFailure(error));\n    }\n}\n    \n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        const userRef = yield call(createUserProfileDocument, user);\n        const userSnapshot = yield userRef.get();\n        yield put(\n            signInSuccess({\n                id:userSnapshot.id, \n                ...userSnapshot.data()\n            })\n        )\n    }\n    catch(error){\n        put(signInFailure(error))\n    }\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}"]},"metadata":{},"sourceType":"module"}